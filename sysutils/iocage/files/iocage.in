#!/bin/sh
#
# $FreeBSD: head/sysutils/py3-iocage/files/iocage.in 436331 2017-03-17 09:59:15Z araujo $
#

# PROVIDE: iocage
# REQUIRE: LOGIN cleanvar sshd ZFS
# BEFORE:  securelevel
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable iocage:
#
# iocage_enable="YES"
#
#

. /etc/rc.subr

name="iocage"
rcvar=iocage_enable

# read configuration and set defaults
load_rc_config "$name"
: ${iocage_enable="NO"}
: ${iocage_lang="en_US.UTF-8"}

start_cmd="iocage_start"
stop_cmd="iocage_stop"
export LANG=$iocage_lang

create_bridge()
{
    local default_iface="$(netstat -f inet -nrW | grep '^default' | \
                         awk '{ print $6 }')"
    local bridge_ifaces="$(netstat -iWn | egrep 'bridge0|bridge1' | \
                         awk '{ print $1 }')"

    # Check to see if any bridges exist, otherwise create them
    # we add the default interface as a member so the jails can reach the
    # world.
    if [ ! -z "${bridge_ifaces}" ] ; then
        for _b in ${bridge_ifaces} ; do
            if [ "${_b}" != "bridge0" ] ; then
                _bridge_exists="$(echo ${bridge_ifaces} | grep bridge0)"
                if [ -z "${_bridge_exists}" ] ; then
                    ifconfig bridge0 create addm "${default_iface}"
                else
                    continue
                fi
            elif [ "${_b}" != "bridge1" ] ; then
                _bridge_exists="$(echo ${bridge_ifaces} | grep bridge1)"
                if [ -z "${_bridge_exists}" ] ; then
                    ifconfig bridge1 create
                else
                    continue
                fi
            fi
        done
    else
        ifconfig bridge0 create addm "${default_iface}"
        ifconfig bridge1 create
    fi
}

iocage_start()
{
    if checkyesno ${rcvar}; then
        echo "* [I|O|C] starting jails... "
        create_bridge
        /usr/local/bin/iocage start --rc
    fi
}

iocage_stop()
{
    if checkyesno ${rcvar}; then
        echo "* [I|O|C] stopping jails... "
        /usr/local/bin/iocage stop --rc
    fi
}

run_rc_command "$1"
